// We use MVEL to return a List of work definitions
// The properties of the work definitions are specified as a Map<String, Object>
// The allowed properties are name, parameters, displayName, icon and customEditor
// The returned result should thus be of type List<Map<String, Object>>
import org.drools.process.core.datatype.impl.type.ListDataType;
import org.drools.process.core.datatype.impl.type.ObjectDataType;
import org.drools.process.core.datatype.impl.type.StringDataType;

[

  [
    "name" : "Email",
    "parameters" : [
    	"From" : new StringDataType(),
    	"To" : new StringDataType(),
    	"Subject" : new StringDataType(),
    	"Text" : new StringDataType()
    ],
    "displayName" : "Email",
    "icon" : "icons/import_statement.gif",
    "customEditor" : "org.drools.eclipse.flow.common.editor.editpart.work.EmailCustomEditor"
  ],
  
  [
    "name" : "Log",
    "parameters" : [
      "Message" : new StringDataType()
    ],
    "displayName" : "Log",
    "icon" : "icons/open.gif"
    "customEditor" : "org.drools.eclipse.flow.common.editor.editpart.work.SampleCustomEditor"
  ],
    
  [
    "name" : "Finder",
    "parameters" : [
    	"Path" : new StringDataType(),
    	"Regex" : new StringDataType()
    ],
    "displayName" : "Finder"
  ],
  
  [
    "name" : "Archive",
    "parameters" : [
    	"Archive" : new StringDataType(),
    	"Files" : new ListDataType(new ObjectDataType("java.io.File"))
    ],
    "displayName" : "Archive"
  ],
  
  [
    "name" : "Exec",
    "parameters" : [
      "Command" : new StringDataType()
    ],
    "displayName" : "Exec",
  ]
    
]