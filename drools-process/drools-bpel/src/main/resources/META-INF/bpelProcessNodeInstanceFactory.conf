// we use MVEL to configure our nodes, simply populate a map, which will be added to the main registry
import org.drools.bpel.core.BPELAssign;
import org.drools.bpel.core.BPELFlow;
import org.drools.bpel.core.BPELInvoke;
import org.drools.bpel.core.BPELReceive;
import org.drools.bpel.core.BPELReply;
import org.drools.bpel.core.BPELScope;
import org.drools.bpel.core.BPELSequence;
import org.drools.bpel.core.BPELEmpty;
import org.drools.bpel.core.BPELPick;
import org.drools.bpel.core.BPELSwitch;
import org.drools.bpel.core.BPELThrow;
import org.drools.bpel.core.BPELWait;
import org.drools.bpel.core.BPELWhile;
import org.drools.bpel.instance.BPELAssignInstance;
import org.drools.bpel.instance.BPELFlowInstance;
import org.drools.bpel.instance.BPELInvokeInstance;
import org.drools.bpel.instance.BPELReceiveInstance;
import org.drools.bpel.instance.BPELReplyInstance;
import org.drools.bpel.instance.BPELScopeInstance;
import org.drools.bpel.instance.BPELSequenceInstance;
import org.drools.bpel.instance.BPELEmptyInstance;
import org.drools.bpel.instance.BPELPickInstance;
import org.drools.bpel.instance.BPELSwitchInstance;
import org.drools.bpel.instance.BPELThrowInstance;
import org.drools.bpel.instance.BPELWaitInstance;
import org.drools.bpel.instance.BPELWhileInstance;
import org.drools.workflow.instance.impl.factory.CreateNewNodeFactory;

[
    BPELAssign   : new CreateNewNodeFactory( BPELAssignInstance ),
    BPELFlow     : new CreateNewNodeFactory( BPELFlowInstance ),
    BPELInvoke   : new CreateNewNodeFactory( BPELInvokeInstance ),
    BPELReceive  : new CreateNewNodeFactory( BPELReceiveInstance ),
    BPELReply    : new CreateNewNodeFactory( BPELReplyInstance ),
    BPELScope    : new CreateNewNodeFactory( BPELScopeInstance ),
    BPELSequence : new CreateNewNodeFactory( BPELSequenceInstance ),
    BPELEmpty    : new CreateNewNodeFactory( BPELEmptyInstance ),
    BPELPick     : new CreateNewNodeFactory( BPELPickInstance ),
    BPELSwitch   : new CreateNewNodeFactory( BPELSwitchInstance ),
    BPELThrow    : new CreateNewNodeFactory( BPELThrowInstance ),
    BPELWait     : new CreateNewNodeFactory( BPELWaitInstance ),
    BPELWhile    : new CreateNewNodeFactory( BPELWhileInstance ),
]
