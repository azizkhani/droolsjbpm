Existential check 0.0
Eval Record info(1.0) for args L :  
AND{
(0@16) : 0.0 dotAnd(exists()) [EVAL 0.0,]
(0@17) : 1.0 Test Exist 4 [EVAL 0.0,PRIOR 1.0,]
}

(0@18) : 0.0 minAnd(dotAnd(exists())Test Exist 4) [EVAL 0.0,]
	(0@16) : 0.0 dotAnd(exists()) [EVAL 0.0,]
		(0@15) : 0.0 exists() [EVAL 0.0,]
	(0@17) : 1.0 Test Exist 4 [EVAL 0.0,PRIOR 1.0,]


Existential check 1.0
Eval Record info(1.0) for args L :  
AND{
(0@16) : 1.0 dotAnd(exists()) [EVAL 1.0,]
(0@17) : 1.0 Test Exist 4 [EVAL 0.0,PRIOR 1.0,]
}

(0@18) : 1.0 minAnd(dotAnd(exists())Test Exist 4) [EVAL 1.0,]
	(0@16) : 1.0 dotAnd(exists()) [EVAL 1.0,]
		(63@15) : 1.0 exists() [EVAL 1.0,]
			(31@-1) : 0.0 dotAnd(dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)))) [EVAL 0.0,]
				(31@13) : 0.0 dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1))) [EVAL 0.0,]
					(31@1) : 1.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)) [EVAL 1.0,]
						(31@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(31@7) : 1.0 Integer ==(org.drools.chance.Message.status,0) [EVAL 1.0,]
					(31@1) : 0.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)) [EVAL 0.0,]
						(31@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(31@11) : 0.0 Integer ==(org.drools.chance.Message.status,1) [EVAL 0.0,]
			(63@-1) : 0.0 dotAnd(dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)))) [EVAL 0.0,]
				(63@13) : 0.0 dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1))) [EVAL 0.0,]
					(32@1) : 0.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)) [EVAL 0.0,]
						(32@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(32@7) : 0.0 Integer ==(org.drools.chance.Message.status,0) [EVAL 0.0,]
					(31@1) : 0.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)) [EVAL 0.0,]
						(31@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(31@11) : 0.0 Integer ==(org.drools.chance.Message.status,1) [EVAL 0.0,]
			(32@-1) : 0.0 dotAnd(dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)))) [EVAL 0.0,]
				(32@13) : 0.0 dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1))) [EVAL 0.0,]
					(32@1) : 0.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)) [EVAL 0.0,]
						(32@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(32@7) : 0.0 Integer ==(org.drools.chance.Message.status,0) [EVAL 0.0,]
					(32@1) : 1.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)) [EVAL 1.0,]
						(32@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(32@11) : 1.0 Integer ==(org.drools.chance.Message.status,1) [EVAL 1.0,]
			(63@-1) : 1.0 dotAnd(dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)))) [EVAL 1.0,]
				(63@13) : 1.0 dotAnd(dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)),dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1))) [EVAL 1.0,]
					(31@1) : 1.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,0)) [EVAL 1.0,]
						(31@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(31@7) : 1.0 Integer ==(org.drools.chance.Message.status,0) [EVAL 1.0,]
					(32@1) : 1.0 dotAnd(==(class,org.drools.chance.Message),Integer ==(org.drools.chance.Message.status,1)) [EVAL 1.0,]
						(32@6) : 1.0 ==(class,org.drools.chance.Message) [EVAL 1.0,]
						(32@11) : 1.0 Integer ==(org.drools.chance.Message.status,1) [EVAL 1.0,]
	(0@17) : 1.0 Test Exist 4 [EVAL 0.0,PRIOR 1.0,]


