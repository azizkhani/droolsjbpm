package org.drools.examples.chance
 
import org.drools.examples.chance.Test.Trigger;
import org.drools.examples.chance.Test.Message;
import org.drools.examples.chance.Test.Exercise;
import org.drools.examples.chance.Test.Person;
import org.drools.examples.chance.Test.Book;
import java.io.FileWriter;


global FileWriter writer;


rule "Trigger"
	when
		Trigger();		
	then
		writer.write("\n A Message with status = HELLO will hold the message Hello!");
		drools.inject(new Message(Message.HELLO),"org.drools.examples.Test$Message.message","String ==","Hello!");
end



rule "Synch"
	when
		$m : Message( message == "Hello!" )
	then
		writer.write("\n\nSynched rule fires at "+drools.getConsequenceDegree());
		writer.write("\nDeclared message is "+$m.getMessage()+ " but is thought to be Hello!");
		
		
		Person p = new Person("davide",27);
		Book b = new Book("Drools Manual",p);				
		writer.write("\n Now stating Davide owns a Drools Manual");
		
		//FIXME Until lexical analysis is done properly, args must be defined in two steps
		Object[] args = new Object[] { p , b }; 
		drools.inject(args,"org.drools.examples.Test$Book.owner","Object ==","$p");
end



rule "BetaSynch"
	when		
		$p : Person( name == "davide" , age > 25 || age < 18)			
		$b : Book(  owner == $p )	
	then
		writer.write("\n\n\nBook has no a-priori known owner\n");
		writer.write("Book.owner = "+$b.getOwner()+"\n");
		writer.write("Info comes from rule, evaluation is "+drools.getConsequenceDegree()+"\n");
		
		writer.write("\n\nSo, an exceptional exercise will be done\n\n");
		Exercise e = new Exercise("Rule Programming");
		drools.inject(e,"Exceptional");
end


//This is a rule with false implication, meaning that all conclusions are undetermined
//Filter strat propagates as soon as some info is available
rule "Exceptional"
	@degree( 0 )
	@filterStrat( org.drools.reteoo.filters.AlwaysPassFilterStrategy )	
	when
		$e : Exercise( $t : topic)		
	then
		writer.write("\nEx "+ $t +" can be done? Answer is " + drools.getConsequenceDegree());	
end

